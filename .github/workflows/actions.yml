name: Build


env:
  REGISTRY_GITHUB: ghcr.io
  REGISTRY_DOCKER: index.docker.io
  GH_IMAGE_NAME: ghcr.io/${{ github.repository }}
  DH_IMAGE_NAME: index.docker.io/thefoundation/multiarch-images
  GL_IMAGE_NAME: registry.gitlab.io/thefoundation/multiarch-images
  CI_REGISTRY_IMAGE: ghcr.io/${{ github.repository }}
  BUILDCACHE: ghcr.io/${{ github.repository_owner }}/buildcache
  PLATFORMS: "linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64/v8"
# permissions are needed if pushing to ghcr.io
permissions:
  packages: write

on:
  push:
    branches:
      - 'master'
      - 'main'
  schedule:
    - cron: '0 0 1 * *'
# Run monthly, at 00:00 on the 1st day of month.
#    tags:
#      - 'v*.*.*'
  pull_request:
    branches:
      - 'dev'
      - 'testing'

jobs:
  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
######  upstream:
######    runs-on: ubuntu-latest
######    environment: build
######    permissions:
######      packages: read
######      contents: read
######    if: github.repository_owner == 'TheFoundation'
######    steps:
######      - uses: actions/checkout@v3
######      - name: prep-downstream
######        run: |
######             mkdir downstream
######             cp -aurv _build_hocker.sh .github downstream &
######             tar cv . |md5sum |cut -d" " -f1 > downstream/.md5sum_of_tar
######             bash build/_generate_downstream_readme.sh thefoundation-builder hocker-builder-github > downstream/README.md
######             wait
#######      - uses: cpina/github-action-push-to-another-repository@main
######      - uses: TheFoundation/github-action-push-to-another-repository@main
######        env:
######          SSH_DEPLOY_KEY: ${{ secrets.SSH_DEPLOY_KEY }}
#######          API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
######        with:
######          source-directory: 'downstream'
######          destination-github-username: 'thefoundation-builder'
######          destination-repository-name: 'hocker-builder-github'
######          user-email: actions@github.com
######          target-branch: main

  build-base-go:
    runs-on: ubuntu-latest
    env:
      REGISTRY_PASSWORD: ${{ secrets.REGISTRY_PASSWORD }}
      APT_HTTP_PROXY_URL: ${{ secrets.APT_HTTP_PROXY_URL }}

    environment: push-dockerhub
    permissions:
      packages: write
      contents: read
    if: github.repository_owner == 'thefoundation-builder'
    steps:
#      - uses: actions/checkout@v3
## SCRATCH IMAGE
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      - name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}
      - name: current images
        run: docker image ls
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.REGISTRY_USER }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      -
        name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: build images
#        run: sudo /bin/bash -c "export REGISTRY_PASSWORD=$REGISTRY_PASSWORD;export REGISTRY_HOST=docker.io;export REGISTRY_PROJECT=thefoundation;export PROJECT_NAME=hocker;export REGISTRY_USER=${{ secrets.REGISTRY_USER }} ;bash _build_hocker.sh base-focal "
        run: ((echo FROM alpine;echo RUN apk add --no-cache bash procps ) > /tmp/Dfile ) && 	docker buildx build --platform ${PLATFORMS}  --pull --cache-to=type=registry,ref=$BUILDCACHE:zzz_buildcache_scratch --cache-from=type=registry,ref=$BUILDCACHE:zzz_buildcache_scratch-alpine -t DH_IMAGE_NAME:scratch-alpine --push  -f /tmp/Dfile .
      - name: show files
#        run: bash -c "ls buildlogs/  -lh1 ; tail -n 20 buildlogs/*"
        run: docker image ls 
      - name: Archive production artifacts
        uses: actions/upload-artifact@v3
        if: failure()
        with:
         name: buildlogs
         path: |
              buildlogs
